{"version":3,"sources":["components/includes/Header.js","components/form/FormShapeType.js","components/shapes/Circle.js","components/shapes/Rectangle.js","components/form/Result.js","components/form/MainForm.js","App.js","serviceWorker.js","index.js","BWLogo.png"],"names":["Header","react_default","a","createElement","className","src","logo","alt","FormShapeType","continue","e","preventDefault","_this","props","nextStep","back","_this$props","this","onChangeHandler","values","onSubmit","type","name","value","onChange","Component","Circle","state","diameter","inputChangeHandler","setState","Object","defineProperty","target","class","for","placeholder","Rectangle","width","length","Result","resultValue","MainForm","step","shape","result","arguments","undefined","prevStep","console","log","_this$state","FormShapeType_FormShapeType","Circle_Circle","Rectangle_Rectangle","App","includes_Header","form_MainForm","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.51edc3da.chunk.js","sourcesContent":["import React from 'react';\r\nimport logo from '../../BWLogo.png';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"contianer-fluid text-center\">\r\n      <img className=\" logo-calculator\" src={logo} alt=\"\" />\r\n    </div>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nexport default class FormShapeType extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n  render() {\r\n    const { values, onChangeHandler } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.continue} className=\"form\">\r\n          <div className=\"form-group\">\r\n            <div className=\"form-check\">\r\n              <label className=\"form-check-label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-check-input\"\r\n                  name=\"shape\"\r\n                  value=\"rectangle\"\r\n                  onChange={onChangeHandler}\r\n                />\r\n                Rectangle\r\n              </label>\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <label className=\"form-check-label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  className=\"form-check-input\"\r\n                  name=\"shape\"\r\n                  value=\"circle\"\r\n                  onChange={onChangeHandler}\r\n                />\r\n                Circle\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <input type=\"submit\" value=\"Next\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Circle extends Component {\r\n  state = {\r\n    diameter: 1\r\n  };\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep(this.state.diameter*3.14);\r\n  };\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n  inputChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Circle</h1>\r\n        <form className=\"container\" onSubmit={this.continue}>\r\n          <div class=\"form-group \">\r\n            <label for=\"length\">Diameter</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              name=\"circleDiameter\"\r\n              placeholder=\"Enter Diameter\"\r\n              value={this.state.diameter}\r\n              onChange={this.inputChangeHandler}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Next\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Rectangle extends Component {\r\n  state = {\r\n    width: 1,\r\n    length: 1\r\n  };\r\n  continue = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.nextStep(this.state.width * this.state.length);\r\n  };\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n  inputChangeHandler = e => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Rectangle</h1>\r\n        <form className=\"container\" onSubmit={this.continue}>\r\n          <div class=\"form-group \">\r\n            <label for=\"length\">Length</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              name=\"length\"\r\n              placeholder=\"Enter Length\"\r\n              value={this.state.length}\r\n              onChange={this.inputChangeHandler}\r\n            />\r\n          </div>\r\n          <div class=\"form-group \">\r\n            <label for=\"length\">Width</label>\r\n            <input\r\n              type=\"number\"\r\n              class=\"form-control\"\r\n              name=\"width\"\r\n              placeholder=\"Enter Width\"\r\n              value={this.state.width}\r\n              onChange={this.inputChangeHandler}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" value=\"Next\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Result(props) {\r\n    return (\r\n        <div>\r\n            <h3>{props.resultValue}</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport FormShapeType from './FormShapeType';\r\n\r\nimport Circle from '../shapes/Circle';\r\nimport Rectangle from '../shapes/Rectangle';\r\n\r\nimport Result from './Result';\r\n\r\nclass MainForm extends Component {\r\n  state = {\r\n    step: 1,\r\n    shape: 'rectangle',\r\n    result: -1\r\n  };\r\n\r\n  //   Proceed to next step\r\n  nextStep = (result = -1) => {\r\n    const { step } = this.state;\r\n    this.setState({ step: step + 1, result });\r\n  };\r\n  //   Go back to previous step\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({ step: step - 1 });\r\n  };\r\n  // Handle the field Change\r\n  inputChangeHandler = e => {\r\n    console.log('as');\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { step, shape, result } = this.state;\r\n\r\n    switch (step) {\r\n      case 1:\r\n        return (\r\n          <FormShapeType\r\n            nextStep={this.nextStep}\r\n            onChangeHandler={this.inputChangeHandler}\r\n          />\r\n        );\r\n      case 2:\r\n        if (shape === 'circle') {\r\n          return <Circle nextStep={this.nextStep} />;\r\n        } else if (shape === 'rectangle') {\r\n          return <Rectangle nextStep={this.nextStep} />;\r\n        }\r\n        break;\r\n      case 3:\r\n        return <Result resultValue={result} />;\r\n    }\r\n  }\r\n}\r\nexport default MainForm;\r\n","import React from 'react';\nimport Header from './components/includes/Header';\nimport MainForm from './components/form/MainForm';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainForm />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/BWLogo.6d4e98c1.png\";"],"sourceRoot":""}